{"version":3,"file":"component---src-pages-using-ssr-js-a6b6b130fce4b99cc4a1.js","mappings":"6LAGe,SAASA,IACtB,OACEC,EAAAA,cAAAA,SAAAA,CAAQC,UAAU,kGAChBD,EAAAA,cAACE,EAAAA,KAAD,CAAMC,GAAG,KACPH,EAAAA,cAAAA,MAAAA,CAAKI,IAAI,kBAAkBC,OAAQ,GAAIC,IAAI,mBAE7CN,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,yCACZD,EAAAA,cAAAA,KAAAA,KAAAA,iBACAA,EAAAA,cAAAA,KAAAA,KAAAA,iBAIP,CCZc,SAASO,IACtB,OACEP,EAAAA,cAAAA,SAAAA,CAAQC,UAAU,mBAChBD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,mDACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,0BACdD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OAAOG,IAAI,kBAAkBE,IAAI,aAChDN,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,2BAEhBD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,oEACZD,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,iBAAiBO,KAAK,KAAnC,aAIFR,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,iBAAiBO,KAAK,KAAnC,wBAIFR,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,iBAAiBO,KAAK,KAAnC,mBAIFR,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,iBAAiBO,KAAK,KAAnC,mBAOT,CCrBD,IA0BA,EA1Be,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,UACHC,EAAAA,EAAAA,gBAAe,cAU5B,OACEV,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gEACbD,EAAAA,cAACD,EAAD,MACAC,EAAAA,cAAAA,OAAAA,KAAOS,GACPT,EAAAA,cAACO,EAAD,OAhBR,C,+CCHA,SAASI,EAAT,GAAgD,IAAD,IAAhCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,MAAOJ,EAAY,EAAZA,SACzBK,GAASJ,EAAAA,EAAAA,gBAAe,YAAxBI,KAcFC,EAAkBH,GAAeE,EAAKE,aAAaJ,YACnDK,EAAY,UAAGH,EAAKE,oBAAR,aAAG,EAAmBH,MAExC,OACE,gCACE,6BAAQI,EAAkBJ,EAAN,MAAiBI,EAAiBJ,GACtD,wBAAMK,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASN,IACnC,wBAAMO,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAAS,UAAAL,EAAKE,oBAAL,eAAmBK,SAAnB,KACtC,wBAAMH,KAAK,gBAAgBC,QAASN,IACpC,wBAAMK,KAAK,sBAAsBC,QAASJ,IACzCN,EAGN,CAEDE,EAAIW,aAAe,CACjBV,YAAY,IAQd,K,6GCpBaW,EAAO,kBAAM,gBAAC,IAAD,CAAKV,MAAM,aAAjB,EAEpB,UA9BiB,SAAC,GAAmB,IAAjBW,EAAiB,EAAjBA,WAClB,OACE,gBAAC,IAAD,KACE,0CACe,kDAEf,4IAE+C,IAC7C,qEAHF,KAKA,uBACEC,MAAO,CAAEC,MAAO,QAASC,aAAc,wBACvCvB,IAAI,eACJE,IAAKkB,EAAWI,UAElB,2DACkC,IAChC,qBAAGpB,KAAK,oFAAR,6CAFF,KAOA,gBAAC,EAAAN,KAAD,CAAMC,GAAG,KAAT,2BAGL,C","sources":["webpack://gatsby-starter-default/./src/components/Header.tsx","webpack://gatsby-starter-default/./src/components/Footer.tsx","webpack://gatsby-starter-default/./src/components/Layout.tsx","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default function Header() {\n  return (\n    <header className=\" bg-gradient-to-r from-backgreen to-backsun py-5 px-10 flex flex-row justify-between text-copy\">\n      <Link to=\"/\">\n        <img alt=\"Hypercerts logo\" height={16} src=\"logo-text.svg\" />\n      </Link>\n      <ul className=\"flex-row flex space-x-12 items-center\">\n        <li>Documentation</li>\n        <li>Launch Pilot</li>\n      </ul>\n    </header>\n  )\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default function Footer() {\n  return (\n    <footer className=\"mt-16 text-copy\">\n      <div className=\"flex flex-row items-center justify-center mx-12\">\n        <hr className=\"grow border-evergreen\" />\n        <img className=\"mx-8\" alt=\"Hypercerts logo\" src=\"logo.svg\" />\n        <hr className=\"border-evergreen grow\" />\n      </div>\n      <ul className=\"flex flex-col items-center sm:flex-row justify-evenly pb-10 pt-6\">\n        <li>\n          <a className=\"cursor-pointer\" href=\"/\">\n            Telegram\n          </a>\n        </li>\n        <li>\n          <a className=\"cursor-pointer\" href=\"/\">\n            Sign up for updates\n          </a>\n        </li>\n        <li>\n          <a className=\"cursor-pointer\" href=\"/\">\n            Privacy policy\n          </a>\n        </li>\n        <li>\n          <a className=\"cursor-pointer\" href=\"/\">\n            Protocol Labs\n          </a>\n        </li>\n      </ul>\n    </footer>\n  )\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./Header\"\nimport Footer from \"./Footer\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <div className=\"mx-auto max-w-4xl bg-gradient-to-b from-backsun to-backgreen\">\n        <Header />\n        <main>{children}</main>\n        <Footer />\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["Header","React","className","Link","to","alt","height","src","Footer","href","children","useStaticQuery","Seo","description","title","site","metaDescription","siteMetadata","defaultTitle","name","content","property","author","defaultProps","Head","serverData","style","width","borderRadius","message"],"sourceRoot":""}